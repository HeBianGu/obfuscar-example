<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>
  
  <!-- 或者只在 Release 模式下禁用 -->
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <DebugType>none</DebugType>
    <IncludeSymbols>false</IncludeSymbols>
  </PropertyGroup>
  
  <PropertyGroup>
    <ObfuscateOnBuild>true</ObfuscateOnBuild>
    <ObfuscarConfigPath>$(MSBuildThisFileDirectory)\obfuscar.xml</ObfuscarConfigPath>
  </PropertyGroup>

  <Target Name="ConfigureObfuscation" BeforeTargets="BeforeBuild">
    <PropertyGroup Condition="'$(Configuration)' == 'Release' AND '$(ObfuscateOnBuild)' == 'true'">
      <DebugType>embedded</DebugType>
      <DebugSymbols>true</DebugSymbols>
      <!-- 使用绝对路径，且不要以反斜杠结尾 -->
      <ObfuscationOutputPath>$(TargetDir)Obfuscated</ObfuscationOutputPath>
    </PropertyGroup>
  </Target>

  <Target Name="RunObfuscation" AfterTargets="Build" Condition="'$(Configuration)' == 'Release' AND '$(ObfuscateOnBuild)' == 'true'">
    <Message Text="开始代码混淆处理..." Importance="high" />

    <MakeDir Directories="$(ObfuscationOutputPath)" />

    <Exec Command="dotnet tool restore" WorkingDirectory="$(TargetDir)" IgnoreExitCode="false" />

    <!-- 执行加密任务 -->
    <Exec
      Command="dotnet tool run obfuscar.console $(ObfuscarConfigPath)"
      WorkingDirectory="$(TargetDir)"
      IgnoreExitCode="false" />

    <Message Text="混淆完成，输出目录: $(ObfuscationOutputPath)" Importance="high" />

    <!-- 复制混淆后的文件回输出目录,用于生成Nuget包等 --><!--
    <Copy SourceFiles="$(TargetDir)\obfuscated\NugetClassLibrary2.dll"
          DestinationFiles="$(TargetDir)\NugetClassLibrary2.dll" />

    <Message Text="已拷贝文件: @(CopiedFiles)" Importance="high" />-->

    <!-- 使用 ItemGroup 展开通配符 -->
    <ItemGroup>
      <ObfuscatedDlls Include="$(TargetDir)obfuscated\*.dll" />
    </ItemGroup>

    <!-- 现在拷贝展开后的文件列表 -->
    <Copy SourceFiles="@(ObfuscatedDlls)"
          DestinationFolder="$(TargetDir)"
          OverwriteReadOnlyFiles="true" />

    <Message Text="已拷贝文件: @(ObfuscatedDlls)" Importance="high" />
  </Target>
</Project>
